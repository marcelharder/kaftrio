// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.DAL;

namespace api.Migrations
{
    [DbContext(typeof(dataContext))]
    [Migration("20230118132432_registryAdded")]
    partial class registryAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("api.DAL.data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("longblob");

                    b.Property<string>("active")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("center_id")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("contributor_id")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("deployed_url")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("paid_till")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("photoUrl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("user_role")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("username")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("api.DAL.data.hospital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("center_id")
                        .HasColumnType("int");

                    b.Property<string>("city")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("country")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("fax")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("pobox")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("street")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("tel")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Hospitals");
                });

            modelBuilder.Entity("api.DAL.data.patientData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("test01")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("test02")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("test03")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("test04")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("test05")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("test06")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("test07")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("test08")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("test09")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("test10")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Registries");
                });
#pragma warning restore 612, 618
        }
    }
}
